{"name":"Coffee-protocol","tagline":"Classes for implementation of RFC 2325","body":"Coffee-Protocol\r\n===============\r\n\r\nAn implementation of [RFC 2325](http://tools.ietf.org/html/rfc2325) to help\r\nwith the implementation of an [HTCPCP](http://tools.ietf.org/html/rfc2324)\r\ncompliant server.\r\n\r\nInstallation\r\n------------\r\n\r\nUse `npm install coffee-protocol`, or clone the repository into your preferred\r\nlocation.\r\n\r\nUsage\r\n-----\r\n\r\nObjects are defined in accordance with [section 4](http://tools.ietf.org/html/rfc2325#section-4)\r\nof the RFC and can be used as follows:\r\n\r\n```javascript\r\nvar coffeeProtocol = require('./index'),\r\n    q = require('q');\r\n\r\nvar pot = new coffeeProtocol.Pot({\r\n  potName: 'Office French Press',\r\n  potType: coffeeProtocol.potTypes['french-press'],\r\n  potCapacity: 2,\r\n  potLocation: 'The kitchen'\r\n});\r\n\r\nvar PotAdapter = new coffeeProtocol.PotAdapter.extend({\r\n  getStartTime: function(){\r\n    var defer = q.defer();\r\n    // Communicate to your coffee pot.\r\n    var date = new Date()\r\n    defer.resolve(date.getTime());\r\n    return defer.promise;\r\n  },\r\n  getTemperature: function(){\r\n    var defer = q.defer();\r\n    // Communicate to your coffee pot.\r\n    defer.resolve(100);\r\n    return defer.promise;\r\n  },\r\n  getStatus: function(){\r\n    var defer = q.defer();\r\n    // Communicate to your coffee pot.\r\n    defer.resolve(coffeeProtocol.potMonitorStatuses.waiting);\r\n    return defer.promise;\r\n  }\r\n});\r\n\r\nvar potMonitor = new coffeeProtocol.PotMonitor(new PotAdapter(), {\r\n  potLevel: 0,\r\n  potMetric: coffeeProtocol.potMonitorMetrics.mug\r\n});\r\n\r\nvar date = new Date()\r\nvar startTime = new Date(date.getTime() + (30 * 60 * 1000))\r\n\r\npot.setPotLocation('The desk of Jack Lawson');\r\npotMonitor.setPotStartTime(startTime.getTime() / 1000)\r\n\r\n// potMonitor `get`s are promises in case we have to do an async request to get\r\n// coffee pot status through potAdapter.\r\n\r\npotMonitor.get('potStartTime').then(function(time){\r\n  console.log('wat')\r\n}, function(err){ console.log(arguments) })\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}